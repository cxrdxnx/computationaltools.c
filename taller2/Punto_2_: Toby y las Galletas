#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

void procesarArray(int n);
void mergerSort(int arr[], int izq, int der);
void merger(int arr[], int izq, int mid, int der);
void procesarBusquedas(int arr[], int n);
void buscarBinaria(int arr[], int consultas[], int izq, int der, int q);

int main(void) {
    int n = 0;
    
    while (scanf("%i", &n) != EOF) {
        procesarArray(n);
    }
    
    return 0;
}

void procesarArray(int n) {
    int arr[n];
    
    for (int i = 0; i < n; i++) {
        scanf("%i", &arr[i]);
    }
    
    mergerSort(arr, 0, n - 1);
    
    // Procesar consultas
    procesarBusquedas(arr, n);
}

void mergerSort(int arr[], int izq, int der) {
    if (izq < der) {  
        int mid = izq + (der - izq) / 2;
        
        mergerSort(arr, izq, mid);
        mergerSort(arr, mid + 1, der);
        merger(arr, izq, mid, der);
    }
}

void merger(int arr[], int izq, int mid, int der) {
    int n1 = mid - izq + 1;
    int n2 = der - mid;

    int izqArr[n1], derArr[n2];
    
    for (int i = 0; i < n1; i++) {
        izqArr[i] = arr[izq + i];
    }
    
    for (int j = 0; j < n2; j++) {
        derArr[j] = arr[mid + 1 + j];
    }
    
    int i = 0, j = 0, k = izq;
    
    while (i < n1 && j < n2) {
        if (izqArr[i] <= derArr[j]) {
            arr[k] = izqArr[i];
            i++;
        } else {
            arr[k] = derArr[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        arr[k] = izqArr[i];
        i++;
        k++;
    }
    
    while (j < n2) {
        arr[k] = derArr[j];
        j++;
        k++;
    }
}

void procesarBusquedas(int arr[], int n) {
    int q = 0;
    scanf("%i", &q);
    
    int consultas[q];
    
    for (int i = 0; i < q; i++) {
        scanf("%i", &consultas[i]);
    }
    
    buscarBinaria(arr, consultas, 0, n - 1, q);
}

void buscarBinaria(int arr[], int consultas[], int izq, int der, int q) {
    for (int i = 0; i < q; i++) {
        int x = consultas[i];
        int l = izq;
        int r = der;
        int res = -1;
        
        while (l <= r) {
            int mid = (l + r) / 2;
            
            if (arr[mid] <= x) {
                res = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        
        if (res == -1) {
            if (i == q - 1) printf("0");
            else printf("0 ");
        } else {
            if (i == q - 1) printf("%d", res + 1);
            else printf("%d ", res + 1);
        }
    }
    printf("\n");
}
